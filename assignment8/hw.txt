1.
Yes. The network is still secure even if others are observing the bytes. This is because SSH secures the communication by using three different encryption techniques: symmetrical encryption, 
asymmetrical encryption, and hashing.
Symmetric encryption is a form of encryption where a secret key is used for both encryption and decryption. Symmetric encryption is used to encrypt the communication during an SSH session, and it is 
generated by a key exchange algorithm. 
Asymmetric encryption is another form of encryption that uses two separate keys: public key and private key. A public key can be shared and is used to encrypt messages. A private key cannot be shared 
and is used to decrypt messages.
Asymmetric encryption is only used during the key exchange algorithm phase.
Hashing is a form of encryption that is not meant to be decrypted.
SSH uses hashing to verify the authenticity of messages. 

No. The network would no longer be secure if others have tapped teh keyboards. They would have access to the passwords and/or passphrases. 

No. The networ would no longer be secure if others had access to the USB. This is because they would have access to the public and private keys themselves.

2.
gpg2 --verify only checks to see that the decrypted message matches the decrypted cleartext signature. This doesn't actually verify who sent the message.
One way to solve this is with Certificate Authorities. A Certificate Authority is an entity that issues digital certificates. A digital certificate certifies the ownership of a public key by the 
named subject of the certificate. A Certificate authority acts as a trusted third party.