1.
$ git clone https://git.savannah.gnu.org/git/diffutils.git
Clone diffutils from Savannah repository.

2.
$ cd diffutils
$ git log > ../git-log.txt
Get log of changes to diffutils.

3.
$ git tag > ../git-tags.txt
Get list of tags used for diffutils. 

4.
$ git log --all --grep="maint: quote 'like this'"
commit 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f
Author: Paul Eggert <eggert@cs.ucla.edu>
Date:   Wed Jan 25 23:46:16 2012 -0800

    maint: quote 'like this' or "like this", not `like this'

    This is in response to a recent change in the GNU coding standards,
    which now suggest quoting 'like this' or "like this", instead of
    `like this' or ``like this''.
    * HACKING, NEWS, README, README-hacking, TODO, doc/diagmeet.note:
    * doc/diffutils.texi, ms/config.bat, ms/config.site:
    * src/analyze.c, src/cmp.c, src/context.c, src/diff.c:
    * src/diff.h, src/diff3.c, src/dir.c, src/ifdef.c, src/io.c:
    * src/sdiff.c, src/side.c, src/system.h, src/util.c:
    * tests/help-version:
    Quote 'like this' or "like this" in commentary.
    * cfg.mk (old_NEWS_hash): Adjust to reflect new NEWS quoting.
    * man/help2man: Update to 1.40.4 version, with quoting fixed as above.
    * po/en.po: Remove translation involving `, as it's no longer needed.
    * src/cmp.c (try_help, specify_ignore_initial, usage, main):
    * src/diff.c (main, try_help, option_help_msgid, specify_value)
    (compare_files):
    * src/diff3.c (main, try_help, option_help_msgid, usage)
    (read_diff):
    * src/dir.c (compare_names):
    * src/sdiff.c (try_help, usage, check_child_status, main):
    * src/util.c (finish_output):
    * tests/help-version:
    Quote 'like this' in output.
$ git show 62ca21c8c1a5aa3488589dcb191a4ef04ae9ed4f > ../quote-patch.txt
Find specific commit and generate a patch from that commit.

5. 
$ git checkout v3.0
Checkout tag version 3.0.

6.
$ patch -p1 < ../quote-patch.txt
Apply patch. Patch couldn't find the following files: HACKING, diffutils.texi, and help2man. Skip those files.
Several hunks failed in the following files:
README - 2 out of 3 hunks FAILED
README-hacking - 1 out of 1 hunk FAILED
cfg.mk - 1 out of 1 hunk FAILED
diff.c - 3 out of 14 hunks FAILED
diff3.c - 1 out of 9 hunks FAILED

7. 
$ git status
HEAD detached at v3.0
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git checkout -- <file>..." to discard changes in working directory)

    modified:   NEWS
    modified:   README
    modified:   TODO
    modified:   doc/diagmeet.note
    modified:   ms/config.bat
    modified:   ms/config.site
    modified:   po/en.po
    modified:   src/analyze.c
    modified:   src/cmp.c
    modified:   src/context.c
    modified:   src/diff.c
    modified:   src/diff.h
    modified:   src/diff3.c
    modified:   src/dir.c
    modified:   src/ifdef.c
    modified:   src/io.c
    modified:   src/sdiff.c
    modified:   src/side.c
    modified:   src/system.h
    modified:   src/util.c
    modified:   tests/help-version

Untracked files:
  (use "git add <file>..." to include in what will be committed)

    NEWS.orig
    README-hacking.orig
    README-hacking.rej
    README.orig
    README.rej
    cfg.mk.orig
    cfg.mk.rej
    ms/config.site.orig
    src/cmp.c.orig
    src/context.c.orig
    src/diff.c.orig
    src/diff.c.rej
    src/diff.h.orig
    src/diff3.c.orig
    src/diff3.c.rej
    src/dir.c.orig
    src/sdiff.c.orig
    src/system.h.orig
    src/util.c.orig
    tests/help-version.orig

no changes added to commit (use "git add" and/or "git commit -a")
Show working tree status.

8.
$ emacs NEWS
(emacs) C-x v =
(emacs) C-h m
Read about emacs functions; specifically vc-diff, vc-revert, and diff-apply-hunk.

9. 
$ emacs NEWS
(emacs) C-x v u
(emacs) yes
(emacs) C-x-c
...
$ emacs src/cmp.c
(emacs) C-x v =
(emacs) C-c C-c
(emacs) C-x o
(emacs) C-u-c-a
(emacs) C-u-c-a
(emacs) C-u-c-a
(emacs) C-u-c-a
(emacs) C-x-c
Revert changes for all non .c and .h files.
Go through each .c and .h file and revert changes that do not modify character string constants.

10.
$ emacs src/*.c.rej
Go through each *.c.rej files and manually fix hunks that failed.

11.
$ git clean -f
Removed untracked files. 

12.
$ git diff > ../quote-3.0-patch.txt
Save diff to patch file. 

13. 
$ ./bootstrap
$ ./configure
$ make
$ make check
$ ./src/diff . -
$ ./src/diff --help
Follow instructions in README-hacking. Test by running diff commands. Switched to lnxsrv05 to avoid an issue with "gets."

14.
$ cd ..
$ git clone https://git.savannah.gnu.org/git/diffutils.git diffutils-3.0
$ cd diffutils-3.0
$ git checkout v3.0
$ cd ..
$ mkdir diffutils-3.0-patch
$ cp ./diffutils/src/*.c ./diffutils-3.0-patch/
$ ./diffutils/src/diff -pru diffutils-3.0/src diffutils-3.0-patch > quote-3.0-test.txt
Clone diffutils from Savannah repository and put into a directory called diffutils-3.0.
Checkout version 3.0.
Put modified .c files into directory called diffutils-3.0-patch.
Compare the original diffutils 3.0 with our modified files. 

15.
$ diff -u quote-3.0-test.txt quote-3.0-patch.txt > tmp.txt
Compare the original git diff with the diff between the diffutils 3.0 and the modified .c files. The files are mostly the same. The differences are inconsequential. Differences include different file names, timestamps, and order of differences. For example, changes for "diff3.c" show up before "diff.c" in quote-3.0-test.txt, while it's the opposite order for "quote-3.0-patch.txt."